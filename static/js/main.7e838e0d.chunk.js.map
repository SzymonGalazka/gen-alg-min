{"version":3,"sources":["Components/Helpers.js","Components/mcCormickGA.js","Components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["round","num","Math","Number","EPSILON","genie","require","Simulation","Individual","Chromosome","createResultItem","name","li","document","createElement","textContent","style","random","mcCormickGA","target","testedFun","x1boundary","x2boundary","settings","querySelector","innerHTML","GlobalMinFinder","individual","data","getDna","top","fitness","generate","min","max","x1","parseFloat","x2","prototype","mutationRate","popSize","numParents","maxGenerations","elitism","selection","ga","Selection","rouletteWheel","crossover","Crossover","multipoint","onCalculateFitness","state","console","log","appendChild","currentGeneration","join","start","Main","useState","fun","setFun","cormickX1","setCormickX1","cormickX2","setCormickX2","setSettings","options","mcCormick","sin","className","onChange","option","value","placeholder","type","e","onClick","id","App","href","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7e838e0d.chunk.js","sourcesContent":["export const getRandomInt = (max) =>\n  Math.floor(Math.random() * Math.floor(max));\n\nexport const getRandomArbitrary = (min, max) =>\n  Math.random() * (max - min) + min;\n\nexport const getColor = () =>\n  'hsl(' +\n  360 * Math.random() +\n  ',' +\n  (25 + 70 * Math.random()) +\n  '%,' +\n  (85 + 10 * Math.random()) +\n  '%)';\n\nexport const round = (num) =>\n  Math.round((num + Number.EPSILON) * 10000) / 10000;\n","import { round, getColor } from './Helpers';\nconst genie = require('@adrianperea/genie.js');\nconst { Simulation, Individual, Chromosome } = genie;\n\nconst createResultItem = (name) => {\n  let li = document.createElement('li');\n  li.textContent = name;\n  li.style = `background-color: ${getColor()}`;\n  return li;\n};\n\nconst mcCormickGA = (target, testedFun, x1boundary, x2boundary, settings) => {\n  document.querySelector('#results').innerHTML = '';\n  class GlobalMinFinder extends Simulation {\n    calculateFitness(individual, data) {\n      const fitness = data.testedFun(\n        individual.getDna(0)[0],\n        individual.getDna(1)[0]\n      );\n      return fitness / data.target;\n    }\n\n    shouldFinish(top) {\n      return top.fitness === 1;\n    }\n  }\n  const generate = (min, max) => {\n    const x = Math.random() * (max - min) + min;\n    return x;\n  };\n\n  const x1 = new Chromosome(1, () =>\n    generate(parseFloat(x1boundary[0]), parseFloat(x1boundary[1]))\n  );\n  const x2 = new Chromosome(1, () =>\n    generate(parseFloat(x2boundary[0]), parseFloat(x2boundary[1]))\n  );\n  const individual = new Individual([x1, x2]);\n  const config = {\n    prototype: individual,\n    data: { target, testedFun },\n    mutationRate: parseFloat(settings.mutationRate),\n    popSize: parseFloat(settings.popSize),\n    numParents: parseFloat(settings.numParents),\n    maxGenerations: parseFloat(settings.maxGenerations),\n    elitism: settings.elitism,\n    selection: genie.ga.Selection.rouletteWheel,\n    crossover: genie.ga.Crossover.multipoint,\n    onCalculateFitness(state) {\n      console.log(state);\n      document.querySelector('#results').appendChild(\n        createResultItem(\n          `Gen ${state.currentGeneration}, Best fitness: ${\n            state.top.fitness\n          }, \\n\n              [${round(state.top.getDna(0)[0])},${round(\n            state.top.getDna(1)[0]\n          )}]`\n        )\n      );\n      console.log(\n        'Best fitness: ' + state.top.fitness,\n        state.top.getDna(0).join(''),\n        state.top.getDna(1).join('')\n      );\n    },\n  };\n\n  const sim = new GlobalMinFinder(config);\n  sim.start();\n};\n\nexport default mcCormickGA;\n","import React, { useState } from 'react';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport './Main.css';\nimport mcCormickGA from './mcCormickGA';\n\nconst Main = () => {\n  const [fun, setFun] = useState('mcCormick');\n  const [cormickX1, setCormickX1] = useState([-1.5, 4]);\n  const [cormickX2, setCormickX2] = useState([-3, 4]);\n  const [settings, setSettings] = useState({\n    mutationRate: 0.3,\n    popSize: 100,\n    numParents: 2,\n    maxGenerations: 100,\n    elitism: true,\n  });\n  const options = ['mcCormick', 'two', 'three'];\n\n  const runAlgorithm = () => {\n    if (fun === options[0])\n      mcCormickGA(-1.9133, mcCormick, cormickX1, cormickX2, settings);\n  };\n  const mcCormick = (x1, x2) =>\n    Math.sin(x1 + x2) + (x1 - x2) * (x1 - x2) + 1.0 + 2.5 * x2 - 1.5 * x1;\n\n  return (\n    <div className='main'>\n      <div className='row'>\n        {console.log(cormickX1)}\n        <h2>Select function</h2>\n        <Dropdown\n          options={options}\n          onChange={(option) => setFun(option.value)}\n          value={fun}\n          placeholder='Select function'\n        />\n      </div>\n      <div className='row'>\n        <h3>Domain</h3>\n        {fun === 'mcCormick' && (\n          <>\n            <label>\n              x1\n              <input\n                type='number'\n                value={cormickX1[0]}\n                onChange={(e) => setCormickX1([e.target.value, cormickX1[1]])}\n              />\n              <input\n                type='number'\n                value={cormickX1[1]}\n                onChange={(e) => setCormickX1([cormickX1[0], e.target.value])}\n              />\n            </label>\n            <label>\n              x2\n              <input\n                type='number'\n                value={cormickX2[0]}\n                onChange={(e) => setCormickX2([e.target.value, cormickX2[0]])}\n              />\n              <input\n                type='number'\n                value={cormickX2[1]}\n                onChange={(e) => setCormickX2([cormickX2[0], e.target.value])}\n              />\n            </label>\n          </>\n        )}\n      </div>\n      <div className='settings'>\n        <label>\n          Mutation rate\n          <input\n            type='number'\n            value={settings.mutationRate}\n            onChange={(e) =>\n              setSettings({ ...settings, mutationRate: e.target.value })\n            }\n          />\n        </label>\n        <label>\n          Population size\n          <input\n            type='number'\n            value={settings.popSize}\n            onChange={(e) =>\n              setSettings({ ...settings, popSize: e.target.value })\n            }\n          />\n        </label>\n        <label>\n          Number of parents\n          <input\n            type='number'\n            value={settings.numParents}\n            onChange={(e) =>\n              setSettings({ ...settings, numParents: e.target.value })\n            }\n          />\n        </label>\n        <label>\n          Max generations\n          <input\n            type='number'\n            value={settings.maxGenerations}\n            onChange={(e) =>\n              setSettings({ ...settings, maxGenerations: e.target.value })\n            }\n          />\n        </label>\n      </div>\n      <div className='row'>\n        <button onClick={() => runAlgorithm()}>Run algorithm</button>\n      </div>\n      <ul className='results' id='results'></ul>\n    </div>\n  );\n};\n\nexport default Main;\n","import './App.css';\nimport Main from './Components/Main';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Main />\n      <footer className='App-footer'>\n        <span>Szymon Galazka 2020</span>\n        <a\n          className='App-link'\n          href='https://github.com/SzymonGalazka/gen-alg-min'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          Repository link\n        </a>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}