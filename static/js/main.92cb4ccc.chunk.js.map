{"version":3,"sources":["Components/Helpers.js","Components/mcCormickGA.js","Components/eggGA.js","Components/michalewiczGA.js","Components/bohachevskyGA.js","Components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["round","num","Math","Number","EPSILON","createResultItem","name","li","document","createElement","textContent","style","random","createBestItem","div","className","onCalculate","state","querySelector","appendChild","currentGeneration","top","fitness","getDna","maxGenerations","el","console","log","join","range","start","end","Array","from","length","v","k","genie","require","Simulation","Individual","Chromosome","mcCormickGA","target","testedFun","x1boundary","x2boundary","settings","setBestGen","innerHTML","GlobalMinFinder","individual","data","generate","min","max","x1","parseFloat","x2","sim","prototype","mutationRate","popSize","numParents","elitism","selection","ga","Selection","rouletteWheel","crossover","Crossover","multipoint","onCalculateFitness","history","some","topFitness","arr","eggGA","optimizer","Optimizer","maximizer","singlePoint","michalewiczGA","bochachevskyGA","Main","useState","bestGen","fun","setFun","cormickX","setCormickX","cormickY","setCormickY","eggX","setEggX","eggY","setEggY","PI","michalewiczX","setMichalewiczX","michalewiczY","setMichalewiczY","easomX","setEasomX","easomY","setEasomY","bohachevskyX","setBohachevskyX","bohachevskyY","setBohachevskyY","setSettings","options","mcCormick","x","y","sin","eggCrate","michalewicz","m","val","first","pow","second","easom","cos","exp","bohachevsky","onChange","option","value","placeholder","type","e","id","checked","onClick","topX","topY","topZ","z","forEach","row","rowData","col","push","map","dna","genes","plotData","layout","width","height","title","App","href","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.92cb4ccc.chunk.js","sourcesContent":["export const getRandomInt = (max) =>\n  Math.floor(Math.random() * Math.floor(max));\n\nexport const getRandomArbitrary = (min, max) =>\n  Math.random() * (max - min) + min;\n\nexport const getColor = () =>\n  'hsl(' +\n  360 * Math.random() +\n  ',' +\n  (25 + 70 * Math.random()) +\n  '%,' +\n  (85 + 10 * Math.random()) +\n  '%)';\n\nexport const round = (num) =>\n  Math.round((num + Number.EPSILON) * 10000) / 10000;\n\nexport const createResultItem = (name) => {\n  let li = document.createElement('li');\n  li.textContent = name;\n  li.style = `background-color: ${getColor()}`;\n  return li;\n};\n\nexport const createBestItem = (name) => {\n  let div = document.createElement('div');\n  div.textContent = name;\n  div.className = 'best-score';\n  return div;\n};\n\nexport const onCalculate = (state) => {\n\n  document.querySelector('#results').appendChild(\n    createResultItem(\n      `Gen ${state.currentGeneration}, Best fitness: ${state.top.fitness}, \\n\n          x1=${round(state.top.getDna(0)[0])}, x2=${round(\n        state.top.getDna(1)[0]\n      )}`\n    )\n  );\n  if (state.currentGeneration === state.maxGenerations) {\n    const el = document.querySelector('#metadata');\n    el.appendChild(createBestItem(`Gen ${state.currentGeneration}`));\n    el.appendChild(createBestItem(`Best fitness: ${state.top.fitness}`));\n    el.appendChild(\n      createBestItem(`\n    x1=${round(state.top.getDna(0)[0])}, x2=${round(state.top.getDna(1)[0])}`)\n    );\n  }\n\n  console.log(\n    'Best fitness: ' + state.top.fitness,\n    state.top.getDna(0).join(''),\n    state.top.getDna(1).join('')\n  );\n};\n\nexport const range = (start, end) =>\n  Array.from({ length: end - start + 1 }, (v, k) => start + k);\n","import { onCalculate } from './Helpers';\nconst genie = require('@adrianperea/genie.js');\nconst { Simulation, Individual, Chromosome } = genie;\n\nconst mcCormickGA = (\n  target,\n  testedFun,\n  x1boundary,\n  x2boundary,\n  settings,\n  setBestGen\n) => {\n  document.querySelector('#results').innerHTML = '';\n  class GlobalMinFinder extends Simulation {\n    calculateFitness(individual, data) {\n      const fitness = data.testedFun(\n        individual.getDna(0)[0],\n        individual.getDna(1)[0]\n      );\n      return fitness / data.target;\n    }\n\n    shouldFinish(top) {\n      return top.fitness >= 0.9999 && top.fitness <= 1.0001;\n    }\n  }\n  const generate = (min, max) => {\n    const x = Math.random() * (max - min) + min;\n    return x;\n  };\n\n  const x1 = new Chromosome(1, () =>\n    generate(parseFloat(x1boundary[0]), parseFloat(x1boundary[1]))\n  );\n  const x2 = new Chromosome(1, () =>\n    generate(parseFloat(x2boundary[0]), parseFloat(x2boundary[1]))\n  );\n  const individual = new Individual([x1, x2]);\n  const config = {\n    prototype: individual,\n    data: { target, testedFun },\n    mutationRate: parseFloat(settings.mutationRate),\n    popSize: parseFloat(settings.popSize),\n    numParents: parseFloat(settings.numParents),\n    maxGenerations: parseFloat(settings.maxGenerations),\n    elitism: settings.elitism,\n    selection: genie.ga.Selection.rouletteWheel,\n    crossover: genie.ga.Crossover.multipoint,\n    onCalculateFitness(state) {\n      onCalculate(state);\n      if (!state.history.some((top) => top.topFitness === state.top.fitness)) {\n        setBestGen((arr) => [...arr, state.top]);\n      }\n    },\n  };\n\n  const sim = new GlobalMinFinder(config);\n  sim.start();\n  console.log(sim);\n};\n\nexport default mcCormickGA;\n","import { onCalculate } from './Helpers';\nconst genie = require('@adrianperea/genie.js');\nconst { Simulation, Individual, Chromosome } = genie;\n\nconst eggGA = (\n  target,\n  testedFun,\n  x1boundary,\n  x2boundary,\n  settings,\n  setBestGen\n) => {\n  document.querySelector('#results').innerHTML = '';\n  class GlobalMinFinder extends Simulation {\n    calculateFitness(individual, data) {\n      const fitness = data.testedFun(\n        individual.getDna(0)[0],\n        individual.getDna(1)[0]\n      );\n      return 1 / fitness;\n    }\n\n    shouldFinish(top) {\n      return top.fitness === 1;\n    }\n  }\n  const generate = (min, max) => {\n    const x = Math.random() * (max - min) + min;\n    return x;\n  };\n\n  const x1 = new Chromosome(1, () =>\n    generate(parseFloat(x1boundary[0]), parseFloat(x1boundary[1]))\n  );\n  const x2 = new Chromosome(1, () =>\n    generate(parseFloat(x2boundary[0]), parseFloat(x2boundary[1]))\n  );\n  const individual = new Individual([x1, x2]);\n  const config = {\n    prototype: individual,\n    data: { target, testedFun },\n    mutationRate: parseFloat(settings.mutationRate),\n    popSize: parseFloat(settings.popSize),\n    numParents: parseFloat(settings.numParents),\n    maxGenerations: parseFloat(settings.maxGenerations),\n    elitism: settings.elitism,\n    optimizer: genie.ga.Optimizer.maximizer,\n    selection: genie.ga.Selection.rouletteWheel,\n    crossover: genie.ga.Crossover.singlePoint,\n    onCalculateFitness(state) {\n      onCalculate(state);\n      if (!state.history.some((top) => top.topFitness === state.top.fitness)) {\n        setBestGen((arr) => [...arr, state.top]);\n      }\n    },\n  };\n\n  const sim = new GlobalMinFinder(config);\n  sim.start();\n};\n\nexport default eggGA;\n","import { onCalculate } from './Helpers';\nconst genie = require('@adrianperea/genie.js');\nconst { Simulation, Individual, Chromosome } = genie;\n\nconst michalewiczGA = (\n  target,\n  testedFun,\n  x1boundary,\n  x2boundary,\n  settings,\n  setBestGen\n) => {\n  document.querySelector('#results').innerHTML = '';\n  class GlobalMinFinder extends Simulation {\n    calculateFitness(individual, data) {\n      const fitness = data.testedFun(\n        individual.getDna(0)[0],\n        individual.getDna(1)[0],\n        10\n      );\n      return fitness / data.target;\n    }\n\n    shouldFinish(top) {\n      return top.fitness >= 0.9999 && top.fitness <= 1.0001;\n    }\n  }\n  const generate = (min, max) => {\n    const x = Math.random() * (max - min) + min;\n    return x;\n  };\n\n  const x1 = new Chromosome(1, () =>\n    generate(parseFloat(x1boundary[0]), parseFloat(x1boundary[1]))\n  );\n  const x2 = new Chromosome(1, () =>\n    generate(parseFloat(x2boundary[0]), parseFloat(x2boundary[1]))\n  );\n  const individual = new Individual([x1, x2]);\n  const config = {\n    prototype: individual,\n    data: { target, testedFun },\n    mutationRate: parseFloat(settings.mutationRate),\n    popSize: parseFloat(settings.popSize),\n    numParents: parseFloat(settings.numParents),\n    maxGenerations: parseFloat(settings.maxGenerations),\n    elitism: settings.elitism,\n    selection: genie.ga.Selection.rouletteWheel,\n    crossover: genie.ga.Crossover.multipoint,\n    onCalculateFitness(state) {\n      onCalculate(state);\n      if (!state.history.some((top) => top.topFitness === state.top.fitness)) {\n        setBestGen((arr) => [...arr, state.top]);\n      }\n    },\n  };\n\n  const sim = new GlobalMinFinder(config);\n  sim.start();\n};\n\nexport default michalewiczGA;\n","import { onCalculate } from './Helpers';\nconst genie = require('@adrianperea/genie.js');\nconst { Simulation, Individual, Chromosome } = genie;\n\nconst bochachevskyGA = (\n  target,\n  testedFun,\n  x1boundary,\n  x2boundary,\n  settings,\n  setBestGen\n) => {\n  document.querySelector('#results').innerHTML = '';\n  class GlobalMinFinder extends Simulation {\n    calculateFitness(individual, data) {\n      const fitness = data.testedFun(\n        individual.getDna(0)[0],\n        individual.getDna(1)[0]\n      );\n      return 1 / fitness;\n    }\n\n    shouldFinish(top) {\n      if (top.fitness >= 0.9999 && top.fitness <= 1.0001) {\n        return true;\n      }\n      return false;\n    }\n  }\n  const generate = (min, max) => {\n    const x = Math.random() * (max - min) + min;\n    return x;\n  };\n\n  const x1 = new Chromosome(1, () =>\n    generate(parseFloat(x1boundary[0]), parseFloat(x1boundary[1]))\n  );\n  const x2 = new Chromosome(1, () =>\n    generate(parseFloat(x2boundary[0]), parseFloat(x2boundary[1]))\n  );\n  const individual = new Individual([x1, x2]);\n  const config = {\n    prototype: individual,\n    data: { target, testedFun },\n    mutationRate: parseFloat(settings.mutationRate),\n    popSize: parseFloat(settings.popSize),\n    optimizer: genie.ga.Optimizer.maximizer,\n    numParents: parseFloat(settings.numParents),\n    maxGenerations: parseFloat(settings.maxGenerations),\n    elitism: settings.elitism,\n    selection: genie.ga.Selection.rouletteWheel,\n    crossover: genie.ga.Crossover.multipoint,\n    onCalculateFitness(state) {\n      onCalculate(state);\n      if (!state.history.some((top) => top.topFitness === state.top.fitness)) {\n        setBestGen((arr) => [...arr, state.top]);\n      }\n    },\n  };\n\n  const sim = new GlobalMinFinder(config);\n  sim.start();\n};\n\nexport default bochachevskyGA;\n","import React, { useState } from 'react';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport './Main.css';\nimport mcCormickGA from './mcCormickGA';\nimport eggGA from './eggGA';\nimport { range } from './Helpers';\nimport michalewiczGA from './michalewiczGA';\nimport bochachevskyGA from './bohachevskyGA';\nimport Plot from 'react-plotly.js';\n// import Plotly from 'plotly.js-basic-dist';\n// import createPlotlyComponent from 'react-plotly.js/factory';\n// const Plot = createPlotlyComponent(Plotly);\n\nconst Main = () => {\n  const [bestGen, setBestGen] = useState([]);\n  const [fun, setFun] = useState('easom');\n  const [cormickX, setCormickX] = useState([-1.5, 4]);\n  const [cormickY, setCormickY] = useState([-3, 4]);\n  const [eggX, setEggX] = useState([-5, 5]);\n  const [eggY, setEggY] = useState([-5, 5]);\n  const [michalewiczX, setMichalewiczX] = useState([0, Math.PI]);\n  const [michalewiczY, setMichalewiczY] = useState([0, Math.PI]);\n  const [easomX, setEasomX] = useState([-100, 100]);\n  const [easomY, setEasomY] = useState([-100, 100]);\n  const [bohachevskyX, setBohachevskyX] = useState([-100, 100]);\n  const [bohachevskyY, setBohachevskyY] = useState([-100, 100]);\n  const [settings, setSettings] = useState({\n    mutationRate: 0.3,\n    popSize: 100,\n    numParents: 2,\n    maxGenerations: 100,\n    elitism: true,\n  });\n  const options = [\n    'mcCormick',\n    'eggCrate',\n    'michalewicz',\n    'easom',\n    'bohachevsky',\n  ];\n\n  const runAlgorithm = () => {\n    setBestGen([]);\n    document.querySelector('#metadata').innerHTML = '[Results]';\n    if (fun === options[0])\n      mcCormickGA(-1.9133, mcCormick, cormickX, cormickY, settings, setBestGen);\n    if (fun === options[1])\n      eggGA(0.0, eggCrate, eggX, eggY, settings, setBestGen);\n    if (fun === options[2])\n      michalewiczGA(\n        -1.8013,\n        michalewicz,\n        michalewiczX,\n        michalewiczY,\n        settings,\n        setBestGen\n      );\n    if (fun === options[3])\n      mcCormickGA(-1, easom, easomX, easomY, settings, setBestGen);\n    if (fun === options[4])\n      bochachevskyGA(\n        0.0,\n        bohachevsky,\n        bohachevskyX,\n        bohachevskyY,\n        settings,\n        setBestGen\n      );\n  };\n\n  const mcCormick = (x, y) =>\n    Math.sin(x + y) + (x - y) * (x - y) + 1.0 + 2.5 * y - 1.5 * x;\n\n  const eggCrate = (x, y) =>\n    x * x +\n    y * y +\n    25 * (Math.sin(x) * Math.sin(x) + Math.sin(y) * Math.sin(y));\n\n  const michalewicz = (x, y, m = 10) => {\n    let val = 0.0;\n    const first = Math.sin((x * x) / Math.PI);\n    val += Math.sin(x) * Math.pow(first, 2.0 * m);\n    const second = Math.sin((2 * y * y) / Math.PI);\n    val += Math.sin(y) * Math.pow(second, 2.0 * m);\n    return -val;\n  };\n\n  const easom = (x, y) =>\n    -Math.cos(x) *\n    Math.cos(y) *\n    Math.exp(-Math.pow(x - Math.PI, 2) - Math.pow(y - Math.PI, 2));\n\n  const bohachevsky = (x, y) =>\n    Math.pow(x, 2) +\n    2 * Math.pow(y, 2) -\n    0.3 * Math.cos(3 * Math.PI * x) -\n    0.4 * Math.cos(4 * Math.PI * y) +\n    0.7;\n\n  const plotData = (type) => {\n    let x, y, fun, topX, topY, topZ;\n    if (type === options[0]) {\n      x = range(-1.5, 4);\n      y = range(-3, 4);\n      fun = mcCormick;\n    }\n    if (type === options[1]) {\n      x = range(-20, 20);\n      y = range(-20, 20);\n      fun = eggCrate;\n    }\n    if (type === options[2]) {\n      x = range(-20, 5);\n      y = range(-20, 5);\n      fun = michalewicz;\n    }\n    if (type === options[3]) {\n      x = range(-20, 20);\n      y = range(-20, 20);\n      fun = easom;\n    }\n    if (type === options[4]) {\n      x = range(-20, 20);\n      y = range(-20, 20);\n      fun = bohachevsky;\n    }\n\n    const z = [];\n    x.forEach((row) => {\n      const rowData = [];\n      y.forEach((col) => {\n        rowData.push(fun(row, col));\n      });\n      z.push(rowData);\n    });\n\n    if (type === options[0]) {\n      topX = bestGen.map((top) => top.dna[0].genes[0] + 2);\n      topY = bestGen.map((top) => top.dna[1].genes[0] + 2.5);\n      topZ = bestGen.map((top) =>\n        fun(top.dna[0].genes[0], top.dna[1].genes[0])\n      );\n    } else if (type === options[2]) {\n      topX = bestGen.map((top) => top.dna[0].genes[0] + 6.5);\n      topY = bestGen.map((top) => top.dna[1].genes[0] + 13);\n      topZ = bestGen.map((top) =>\n        fun(top.dna[0].genes[0], top.dna[1].genes[0])\n      );\n    } else {\n      topX = bestGen.map((top) => top.dna[0].genes[0] + 20);\n      topY = bestGen.map((top) => top.dna[1].genes[0] + 20);\n      topZ = bestGen.map((top) =>\n        fun(top.dna[0].genes[0], top.dna[1].genes[0])\n      );\n    }\n    return [\n      {\n        z: z,\n        type: 'surface',\n      },\n      {\n        x: topX,\n        y: topY,\n        z: topZ,\n        type: 'scatter3d',\n      },\n    ];\n  };\n  return (\n    <div className='main'>\n      <div className='row'>\n        <h2>Select function</h2>\n        <Dropdown\n          options={options}\n          onChange={(option) => {\n            setBestGen([]);\n            document.querySelector('#metadata').innerHTML = '[Results]';\n            document.querySelector('#results').innerHTML = '';\n            setFun(option.value);\n          }}\n          value={fun}\n          placeholder='Select function'\n        />\n      </div>\n      <div className='row'>\n        <h3>Domain</h3>\n        {fun === 'mcCormick' && (\n          <>\n            <label>\n              x1\n              <input\n                type='number'\n                value={cormickX[0]}\n                onChange={(e) => setCormickX([e.target.value, cormickX[1]])}\n              />\n              <input\n                type='number'\n                value={cormickX[1]}\n                onChange={(e) => setCormickX([cormickX[0], e.target.value])}\n              />\n            </label>\n            <label>\n              y\n              <input\n                type='number'\n                value={cormickY[0]}\n                onChange={(e) => setCormickY([e.target.value, cormickY[0]])}\n              />\n              <input\n                type='number'\n                value={cormickY[1]}\n                onChange={(e) => setCormickY([cormickY[0], e.target.value])}\n              />\n            </label>\n            <h5>\n              Ideal fitness = <b>1</b>\n            </h5>\n          </>\n        )}\n        {fun === 'eggCrate' && (\n          <>\n            <label>\n              x1\n              <input\n                type='number'\n                value={eggX[0]}\n                onChange={(e) => setEggX([e.target.value, eggX[1]])}\n              />\n              <input\n                type='number'\n                value={eggX[1]}\n                onChange={(e) => setEggX([eggX[0], e.target.value])}\n              />\n            </label>\n            <label>\n              y\n              <input\n                type='number'\n                value={eggY[0]}\n                onChange={(e) => setEggY([e.target.value, eggY[0]])}\n              />\n              <input\n                type='number'\n                value={eggY[1]}\n                onChange={(e) => setEggY([eggY[0], e.target.value])}\n              />\n            </label>\n            <h5>\n              Ideal fitness = <b>highest</b>\n            </h5>\n          </>\n        )}\n        {fun === 'michalewicz' && (\n          <>\n            <label>\n              x1\n              <input\n                type='number'\n                value={michalewiczX[0]}\n                onChange={(e) =>\n                  setMichalewiczX([e.target.value, michalewiczX[1]])\n                }\n              />\n              <input\n                type='number'\n                value={michalewiczX[1]}\n                onChange={(e) =>\n                  setMichalewiczX([michalewiczX[0], e.target.value])\n                }\n              />\n            </label>\n            <label>\n              y\n              <input\n                type='number'\n                value={michalewiczY[0]}\n                onChange={(e) =>\n                  setMichalewiczY([e.target.value, michalewiczY[0]])\n                }\n              />\n              <input\n                type='number'\n                value={michalewiczY[1]}\n                onChange={(e) =>\n                  setMichalewiczY([michalewiczY[0], e.target.value])\n                }\n              />\n            </label>\n            <h5>\n              Ideal fitness = <b>1</b>\n            </h5>\n          </>\n        )}\n        {fun === 'easom' && (\n          <>\n            <label>\n              x1\n              <input\n                type='number'\n                value={easomX[0]}\n                onChange={(e) => setEasomX([e.target.value, easomX[1]])}\n              />\n              <input\n                type='number'\n                value={easomX[1]}\n                onChange={(e) => setEasomX([easomX[0], e.target.value])}\n              />\n            </label>\n            <label>\n              y\n              <input\n                type='number'\n                value={easomY[0]}\n                onChange={(e) => setEasomY([e.target.value, easomY[0]])}\n              />\n              <input\n                type='number'\n                value={easomY[1]}\n                onChange={(e) => setEasomY([easomY[0], e.target.value])}\n              />\n            </label>\n            <h5>\n              Ideal fitness = <b>1</b>\n            </h5>\n          </>\n        )}\n        {fun === 'bohachevsky' && (\n          <>\n            <label>\n              x1\n              <input\n                type='number'\n                value={easomX[0]}\n                onChange={(e) =>\n                  setBohachevskyX([e.target.value, bohachevskyX[1]])\n                }\n              />\n              <input\n                type='number'\n                value={bohachevskyX[1]}\n                onChange={(e) =>\n                  setBohachevskyX([bohachevskyX[0], e.target.value])\n                }\n              />\n            </label>\n            <label>\n              y\n              <input\n                type='number'\n                value={bohachevskyY[0]}\n                onChange={(e) =>\n                  setBohachevskyY([e.target.value, bohachevskyY[0]])\n                }\n              />\n              <input\n                type='number'\n                value={bohachevskyY[1]}\n                onChange={(e) =>\n                  setBohachevskyY([bohachevskyY[0], e.target.value])\n                }\n              />\n            </label>\n            <h5>\n              Ideal fitness = <b>highest</b>\n            </h5>\n          </>\n        )}\n      </div>\n      <div className='config'>\n        <div className='metadata'>\n          <div className='metadata-best' id='metadata'>\n            [Results]\n          </div>\n        </div>\n        <div className='settings'>\n          <label>\n            Mutation rate\n            <input\n              type='number'\n              value={settings.mutationRate}\n              onChange={(e) =>\n                setSettings({ ...settings, mutationRate: e.target.value })\n              }\n            />\n          </label>\n          <label>\n            Population size\n            <input\n              type='number'\n              value={settings.popSize}\n              onChange={(e) =>\n                setSettings({ ...settings, popSize: e.target.value })\n              }\n            />\n          </label>\n          <label>\n            Number of parents\n            <input\n              type='number'\n              value={settings.numParents}\n              onChange={(e) =>\n                setSettings({ ...settings, numParents: e.target.value })\n              }\n            />\n          </label>\n          <label>\n            Max generations\n            <input\n              type='number'\n              value={settings.maxGenerations}\n              onChange={(e) =>\n                setSettings({ ...settings, maxGenerations: e.target.value })\n              }\n            />\n          </label>\n          <label>\n            Elitism\n            <input\n              type='checkbox'\n              checked={settings.elitism}\n              value={settings.elitism}\n              name='elitism'\n              onChange={(e) =>\n                setSettings({ ...settings, elitism: !settings.elitism })\n              }\n            />\n          </label>\n        </div>\n      </div>\n      <div className='row'>\n        <button onClick={() => runAlgorithm()}>Run algorithm</button>\n      </div>\n      <div className='row'>\n        <div className='metadata-plot' id='plot'>\n          <Plot\n            data={plotData(fun)}\n            layout={{\n              width: 800,\n              height: 700,\n              title: `${fun} plot with unique TOP individuals`,\n            }}\n          />\n          <h5>\n            Note: Axis X and Axis Y on the chart are shifted so that the plot\n            always starts in [0,0] (only positive values).\n          </h5>\n        </div>\n      </div>\n      <ul className='results' id='results'></ul>\n    </div>\n  );\n};\n\nexport default Main;\n","import './App.css';\nimport Main from './Components/Main';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Main />\n      <footer className='App-footer'>\n        <span>Szymon Galazka 2020</span>\n        <a\n          className='App-link'\n          href='https://github.com/SzymonGalazka/gen-alg-min'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          Repository link\n        </a>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}