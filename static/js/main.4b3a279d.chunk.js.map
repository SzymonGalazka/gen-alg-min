{"version":3,"sources":["Components/Helpers.js","Components/mcCormickGA.js","Components/eggGA.js","Components/michalewiczGA.js","Components/bohachevskyGA.js","Components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["round","num","Math","Number","EPSILON","createResultItem","name","li","document","createElement","textContent","style","random","createBestItem","div","className","onCalculate","state","console","log","querySelector","appendChild","currentGeneration","top","fitness","getDna","maxGenerations","el","join","genie","require","Simulation","Individual","Chromosome","mcCormickGA","target","testedFun","x1boundary","x2boundary","settings","innerHTML","GlobalMinFinder","individual","data","generate","min","max","x1","parseFloat","x2","prototype","mutationRate","popSize","numParents","elitism","selection","ga","Selection","rouletteWheel","crossover","Crossover","multipoint","onCalculateFitness","start","eggGA","optimizer","Optimizer","maximizer","singlePoint","michalewiczGA","bochachevskyGA","Main","useState","fun","setFun","cormickX","setCormickX","cormickY","setCormickY","eggX","setEggX","eggY","setEggY","PI","michalewiczX","setMichalewiczX","michalewiczY","setMichalewiczY","easomX","setEasomX","easomY","setEasomY","bohachevskyX","setBohachevskyX","bohachevskyY","setBohachevskyY","setSettings","options","mcCormick","x","y","sin","eggCrate","michalewicz","m","val","first","pow","second","easom","cos","exp","bohachevsky","traces","Array","fill","map","_","i","mul","arr","index","push","randomValues","z","type","mode","onChange","option","value","placeholder","e","id","layout","width","height","title","checked","onClick","App","href","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4b3a279d.chunk.js","sourcesContent":["export const getRandomInt = (max) =>\n  Math.floor(Math.random() * Math.floor(max));\n\nexport const getRandomArbitrary = (min, max) =>\n  Math.random() * (max - min) + min;\n\nexport const getColor = () =>\n  'hsl(' +\n  360 * Math.random() +\n  ',' +\n  (25 + 70 * Math.random()) +\n  '%,' +\n  (85 + 10 * Math.random()) +\n  '%)';\n\nexport const round = (num) =>\n  Math.round((num + Number.EPSILON) * 10000) / 10000;\n\nexport const createResultItem = (name) => {\n  let li = document.createElement('li');\n  li.textContent = name;\n  li.style = `background-color: ${getColor()}`;\n  return li;\n};\n\nexport const createBestItem = (name) => {\n  let div = document.createElement('div');\n  div.textContent = name;\n  div.className = 'best-score';\n  return div;\n};\n\nexport const onCalculate = (state) => {\n  console.log(state);\n\n  document.querySelector('#results').appendChild(\n    createResultItem(\n      `Gen ${state.currentGeneration}, Best fitness: ${state.top.fitness}, \\n\n          x1=${round(state.top.getDna(0)[0])}, x2=${round(\n        state.top.getDna(1)[0]\n      )}`\n    )\n  );\n  if (state.currentGeneration === state.maxGenerations) {\n    const el = document.querySelector('#metadata');\n    el.appendChild(createBestItem(`Gen ${state.currentGeneration}`));\n    el.appendChild(createBestItem(`Best fitness: ${state.top.fitness}`));\n    el.appendChild(\n      createBestItem(`\n    x1=${round(state.top.getDna(0)[0])}, x2=${round(state.top.getDna(1)[0])}`)\n    );\n  }\n\n  console.log(\n    'Best fitness: ' + state.top.fitness,\n    state.top.getDna(0).join(''),\n    state.top.getDna(1).join('')\n  );\n};\n","import {\n  round,\n  createBestItem,\n  createResultItem,\n  onCalculate,\n} from './Helpers';\nconst genie = require('@adrianperea/genie.js');\nconst { Simulation, Individual, Chromosome } = genie;\n\nconst mcCormickGA = (target, testedFun, x1boundary, x2boundary, settings) => {\n  document.querySelector('#results').innerHTML = '';\n  class GlobalMinFinder extends Simulation {\n    calculateFitness(individual, data) {\n      const fitness = data.testedFun(\n        individual.getDna(0)[0],\n        individual.getDna(1)[0]\n      );\n      return fitness / data.target;\n    }\n\n    shouldFinish(top) {\n      return top.fitness >= 0.9999 && top.fitness <= 1.0001;\n    }\n  }\n  const generate = (min, max) => {\n    const x = Math.random() * (max - min) + min;\n    return x;\n  };\n\n  const x1 = new Chromosome(1, () =>\n    generate(parseFloat(x1boundary[0]), parseFloat(x1boundary[1]))\n  );\n  const x2 = new Chromosome(1, () =>\n    generate(parseFloat(x2boundary[0]), parseFloat(x2boundary[1]))\n  );\n  const individual = new Individual([x1, x2]);\n  const config = {\n    prototype: individual,\n    data: { target, testedFun },\n    mutationRate: parseFloat(settings.mutationRate),\n    popSize: parseFloat(settings.popSize),\n    numParents: parseFloat(settings.numParents),\n    maxGenerations: parseFloat(settings.maxGenerations),\n    elitism: settings.elitism,\n    selection: genie.ga.Selection.rouletteWheel,\n    crossover: genie.ga.Crossover.multipoint,\n    onCalculateFitness(state) {\n      onCalculate(state);\n    },\n  };\n\n  const sim = new GlobalMinFinder(config);\n  sim.start();\n};\n\nexport default mcCormickGA;\n","import { round, createBestItem, createResultItem, onCalculate } from './Helpers';\nconst genie = require('@adrianperea/genie.js');\nconst { Simulation, Individual, Chromosome } = genie;\n\nconst eggGA = (target, testedFun, x1boundary, x2boundary, settings) => {\n  document.querySelector('#results').innerHTML = '';\n  class GlobalMinFinder extends Simulation {\n    calculateFitness(individual, data) {\n      const fitness = data.testedFun(\n        individual.getDna(0)[0],\n        individual.getDna(1)[0]\n      );\n      return 1 / fitness;\n    }\n\n    shouldFinish(top) {\n      return top.fitness === 1;\n    }\n  }\n  const generate = (min, max) => {\n    const x = Math.random() * (max - min) + min;\n    return x;\n  };\n\n  const x1 = new Chromosome(1, () =>\n    generate(parseFloat(x1boundary[0]), parseFloat(x1boundary[1]))\n  );\n  const x2 = new Chromosome(1, () =>\n    generate(parseFloat(x2boundary[0]), parseFloat(x2boundary[1]))\n  );\n  const individual = new Individual([x1, x2]);\n  const config = {\n    prototype: individual,\n    data: { target, testedFun },\n    mutationRate: parseFloat(settings.mutationRate),\n    popSize: parseFloat(settings.popSize),\n    numParents: parseFloat(settings.numParents),\n    maxGenerations: parseFloat(settings.maxGenerations),\n    elitism: settings.elitism,\n    optimizer: genie.ga.Optimizer.maximizer,\n    selection: genie.ga.Selection.rouletteWheel,\n    crossover: genie.ga.Crossover.singlePoint,\n    onCalculateFitness(state) {\n      onCalculate(state);\n    },\n  };\n\n  const sim = new GlobalMinFinder(config);\n  sim.start();\n};\n\nexport default eggGA;\n","import {\n  round,\n  createBestItem,\n  createResultItem,\n  onCalculate,\n} from './Helpers';\nconst genie = require('@adrianperea/genie.js');\nconst { Simulation, Individual, Chromosome } = genie;\n\nconst michalewiczGA = (target, testedFun, x1boundary, x2boundary, settings) => {\n  document.querySelector('#results').innerHTML = '';\n  class GlobalMinFinder extends Simulation {\n    calculateFitness(individual, data) {\n      const fitness = data.testedFun(\n        individual.getDna(0)[0],\n        individual.getDna(1)[0],\n        10\n      );\n      return fitness / data.target;\n    }\n\n    shouldFinish(top) {\n      return top.fitness >= 0.9999 && top.fitness <= 1.0001;\n    }\n  }\n  const generate = (min, max) => {\n    const x = Math.random() * (max - min) + min;\n    return x;\n  };\n\n  const x1 = new Chromosome(1, () =>\n    generate(parseFloat(x1boundary[0]), parseFloat(x1boundary[1]))\n  );\n  const x2 = new Chromosome(1, () =>\n    generate(parseFloat(x2boundary[0]), parseFloat(x2boundary[1]))\n  );\n  const individual = new Individual([x1, x2]);\n  const config = {\n    prototype: individual,\n    data: { target, testedFun },\n    mutationRate: parseFloat(settings.mutationRate),\n    popSize: parseFloat(settings.popSize),\n    numParents: parseFloat(settings.numParents),\n    maxGenerations: parseFloat(settings.maxGenerations),\n    elitism: settings.elitism,\n    selection: genie.ga.Selection.rouletteWheel,\n    crossover: genie.ga.Crossover.multipoint,\n    onCalculateFitness(state) {\n      onCalculate(state);\n    },\n  };\n\n  const sim = new GlobalMinFinder(config);\n  sim.start();\n};\n\nexport default michalewiczGA;\n","import {\n  round,\n  createBestItem,\n  createResultItem,\n  onCalculate,\n} from './Helpers';\nconst genie = require('@adrianperea/genie.js');\nconst { Simulation, Individual, Chromosome } = genie;\n\nconst bochachevskyGA = (\n  target,\n  testedFun,\n  x1boundary,\n  x2boundary,\n  settings\n) => {\n  document.querySelector('#results').innerHTML = '';\n  class GlobalMinFinder extends Simulation {\n    calculateFitness(individual, data) {\n      const fitness = data.testedFun(\n        individual.getDna(0)[0],\n        individual.getDna(1)[0]\n      );\n      return 1 / fitness;\n    }\n\n    shouldFinish(top) {\n      if (top.fitness >= 0.9999 && top.fitness <= 1.0001) {\n        return true;\n      }\n      return false;\n    }\n  }\n  const generate = (min, max) => {\n    const x = Math.random() * (max - min) + min;\n    return x;\n  };\n\n  const x1 = new Chromosome(1, () =>\n    generate(parseFloat(x1boundary[0]), parseFloat(x1boundary[1]))\n  );\n  const x2 = new Chromosome(1, () =>\n    generate(parseFloat(x2boundary[0]), parseFloat(x2boundary[1]))\n  );\n  const individual = new Individual([x1, x2]);\n  const config = {\n    prototype: individual,\n    data: { target, testedFun },\n    mutationRate: parseFloat(settings.mutationRate),\n    popSize: parseFloat(settings.popSize),\n    optimizer: genie.ga.Optimizer.maximizer,\n    numParents: parseFloat(settings.numParents),\n    maxGenerations: parseFloat(settings.maxGenerations),\n    elitism: settings.elitism,\n    selection: genie.ga.Selection.rouletteWheel,\n    crossover: genie.ga.Crossover.multipoint,\n    onCalculateFitness(state) {\n      onCalculate(state);\n    },\n  };\n\n  const sim = new GlobalMinFinder(config);\n  sim.start();\n};\n\nexport default bochachevskyGA;\n","import React, { useState } from 'react';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport './Main.css';\nimport mcCormickGA from './mcCormickGA';\nimport eggGA from './eggGA';\nimport michalewiczGA from './michalewiczGA';\nimport bochachevskyGA from './bohachevskyGA';\nimport Plot from 'react-plotly.js';\n// import Plotly from 'plotly.js-basic-dist';\n// import createPlotlyComponent from 'react-plotly.js/factory';\n// const Plot = createPlotlyComponent(Plotly);\nfunction randomValues(num, mul) {\n  const arr = [];\n  const index = [];\n  for (let i = 0; i < num; i++) {\n    arr.push(Math.random() * mul);\n    index.push(i);\n  }\n  return { index, arr };\n}\n\nconst Main = () => {\n  const [fun, setFun] = useState('mcCormick');\n  const [cormickX, setCormickX] = useState([-1.5, 4]);\n  const [cormickY, setCormickY] = useState([-3, 4]);\n  const [eggX, setEggX] = useState([-5, 5]);\n  const [eggY, setEggY] = useState([-5, 5]);\n  const [michalewiczX, setMichalewiczX] = useState([0, Math.PI]);\n  const [michalewiczY, setMichalewiczY] = useState([0, Math.PI]);\n  const [easomX, setEasomX] = useState([-100, 100]);\n  const [easomY, setEasomY] = useState([-100, 100]);\n  const [bohachevskyX, setBohachevskyX] = useState([-100, 100]);\n  const [bohachevskyY, setBohachevskyY] = useState([-100, 100]);\n  const [settings, setSettings] = useState({\n    mutationRate: 0.3,\n    popSize: 100,\n    numParents: 2,\n    maxGenerations: 100,\n    elitism: true,\n  });\n  const options = [\n    'mcCormick',\n    'eggCrate',\n    'michalewicz',\n    'easom',\n    'bohachevsky',\n  ];\n\n  const runAlgorithm = () => {\n    document.querySelector('#metadata').innerHTML = '[Results]';\n    if (fun === options[0])\n      mcCormickGA(-1.9133, mcCormick, cormickX, cormickY, settings);\n    if (fun === options[1]) eggGA(0.0, eggCrate, eggX, eggY, settings);\n    if (fun === options[2])\n      michalewiczGA(-1.8013, michalewicz, michalewiczX, michalewiczY, settings);\n    if (fun === options[3]) mcCormickGA(-1, easom, easomX, easomY, settings);\n    if (fun === options[4])\n      bochachevskyGA(0.0, bohachevsky, bohachevskyX, bohachevskyY, settings);\n  };\n  const mcCormick = (x, y) =>\n    Math.sin(x + y) + (x - y) * (x - y) + 1.0 + 2.5 * y - 1.5 * x;\n\n  const eggCrate = (x, y) =>\n    x * x +\n    y * y +\n    25 * (Math.sin(x) * Math.sin(x) + Math.sin(y) * Math.sin(y));\n\n  const michalewicz = (x, y, m) => {\n    let val = 0.0;\n    const first = Math.sin((x * x) / Math.PI);\n    val += Math.sin(x) * Math.pow(first, 2.0 * m);\n    const second = Math.sin((2 * y * y) / Math.PI);\n    val += Math.sin(y) * Math.pow(second, 2.0 * m);\n    return -val;\n  };\n\n  const easom = (x, y) =>\n    -Math.cos(x) *\n    Math.cos(y) *\n    Math.exp(-Math.pow(x - Math.PI, 2) - Math.pow(y - Math.PI, 2));\n\n  const bohachevsky = (x, y) =>\n    Math.pow(x, 2) +\n    2 * Math.pow(y, 2) -\n    0.3 * Math.cos(3 * Math.PI * x) -\n    0.4 * Math.cos(4 * Math.PI * y) +\n    0.7;\n\n\n  const traces = Array(3)\n    .fill(0)\n    .map((_, i) => {\n      const { index, arr } = randomValues(20, 3);\n      return {\n        x: Array(20).fill(i),\n        y: index,\n        z: arr,\n        type: 'scatter3d',\n        mode: 'lines',\n      };\n    });\n\n  return (\n    <div className='main'>\n      <div className='row'>\n        <h2>Select function</h2>\n        <Dropdown\n          options={options}\n          onChange={(option) => {\n            document.querySelector('#metadata').innerHTML = '[Results]';\n            document.querySelector('#results').innerHTML = '';\n            setFun(option.value);\n          }}\n          value={fun}\n          placeholder='Select function'\n        />\n      </div>\n      <div className='row'>\n        <h3>Domain</h3>\n        {fun === 'mcCormick' && (\n          <>\n            <label>\n              x1\n              <input\n                type='number'\n                value={cormickX[0]}\n                onChange={(e) => setCormickX([e.target.value, cormickX[1]])}\n              />\n              <input\n                type='number'\n                value={cormickX[1]}\n                onChange={(e) => setCormickX([cormickX[0], e.target.value])}\n              />\n            </label>\n            <label>\n              x2\n              <input\n                type='number'\n                value={cormickY[0]}\n                onChange={(e) => setCormickY([e.target.value, cormickY[0]])}\n              />\n              <input\n                type='number'\n                value={cormickY[1]}\n                onChange={(e) => setCormickY([cormickY[0], e.target.value])}\n              />\n            </label>\n            <h5>\n              Ideal fitness = <b>1</b>\n            </h5>\n          </>\n        )}\n        {fun === 'eggCrate' && (\n          <>\n            <label>\n              x1\n              <input\n                type='number'\n                value={eggX[0]}\n                onChange={(e) => setEggX([e.target.value, eggX[1]])}\n              />\n              <input\n                type='number'\n                value={eggX[1]}\n                onChange={(e) => setEggX([eggX[0], e.target.value])}\n              />\n            </label>\n            <label>\n              x2\n              <input\n                type='number'\n                value={eggY[0]}\n                onChange={(e) => setEggY([e.target.value, eggY[0]])}\n              />\n              <input\n                type='number'\n                value={eggY[1]}\n                onChange={(e) => setEggY([eggY[0], e.target.value])}\n              />\n            </label>\n            <h5>\n              Ideal fitness = <b>highest</b>\n            </h5>\n          </>\n        )}\n        {fun === 'michalewicz' && (\n          <>\n            <label>\n              x1\n              <input\n                type='number'\n                value={michalewiczX[0]}\n                onChange={(e) =>\n                  setMichalewiczX([e.target.value, michalewiczX[1]])\n                }\n              />\n              <input\n                type='number'\n                value={michalewiczX[1]}\n                onChange={(e) =>\n                  setMichalewiczX([michalewiczX[0], e.target.value])\n                }\n              />\n            </label>\n            <label>\n              x2\n              <input\n                type='number'\n                value={michalewiczY[0]}\n                onChange={(e) =>\n                  setMichalewiczY([e.target.value, michalewiczY[0]])\n                }\n              />\n              <input\n                type='number'\n                value={michalewiczY[1]}\n                onChange={(e) =>\n                  setMichalewiczY([michalewiczY[0], e.target.value])\n                }\n              />\n            </label>\n            <h5>\n              Ideal fitness = <b>1</b>\n            </h5>\n          </>\n        )}\n        {fun === 'easom' && (\n          <>\n            <label>\n              x1\n              <input\n                type='number'\n                value={easomX[0]}\n                onChange={(e) => setEasomX([e.target.value, easomX[1]])}\n              />\n              <input\n                type='number'\n                value={easomX[1]}\n                onChange={(e) => setEasomX([easomX[0], e.target.value])}\n              />\n            </label>\n            <label>\n              x2\n              <input\n                type='number'\n                value={easomY[0]}\n                onChange={(e) => setEasomY([e.target.value, easomY[0]])}\n              />\n              <input\n                type='number'\n                value={easomY[1]}\n                onChange={(e) => setEasomY([easomY[0], e.target.value])}\n              />\n            </label>\n            <h5>\n              Ideal fitness = <b>1</b>\n            </h5>\n          </>\n        )}\n        {fun === 'bohachevsky' && (\n          <>\n            <label>\n              x1\n              <input\n                type='number'\n                value={easomX[0]}\n                onChange={(e) =>\n                  setBohachevskyX([e.target.value, bohachevskyX[1]])\n                }\n              />\n              <input\n                type='number'\n                value={bohachevskyX[1]}\n                onChange={(e) =>\n                  setBohachevskyX([bohachevskyX[0], e.target.value])\n                }\n              />\n            </label>\n            <label>\n              x2\n              <input\n                type='number'\n                value={bohachevskyY[0]}\n                onChange={(e) =>\n                  setBohachevskyY([e.target.value, bohachevskyY[0]])\n                }\n              />\n              <input\n                type='number'\n                value={bohachevskyY[1]}\n                onChange={(e) =>\n                  setBohachevskyY([bohachevskyY[0], e.target.value])\n                }\n              />\n            </label>\n            <h5>\n              Ideal fitness = <b>highest</b>\n            </h5>\n          </>\n        )}\n      </div>\n      <div className='config'>\n        <div className='metadata'>\n          <div className='metadata-best' id='metadata'>\n            [Results]\n          </div>\n          <div className='metadata-plot' id='plot'>\n            <Plot\n              data={traces}\n              layout={{\n                width: 400,\n                height: 400,\n                title: `Simple 3D Scatter`,\n              }}\n            />\n          </div>\n        </div>\n        <div className='settings'>\n          <label>\n            Mutation rate\n            <input\n              type='number'\n              value={settings.mutationRate}\n              onChange={(e) =>\n                setSettings({ ...settings, mutationRate: e.target.value })\n              }\n            />\n          </label>\n          <label>\n            Population size\n            <input\n              type='number'\n              value={settings.popSize}\n              onChange={(e) =>\n                setSettings({ ...settings, popSize: e.target.value })\n              }\n            />\n          </label>\n          <label>\n            Number of parents\n            <input\n              type='number'\n              value={settings.numParents}\n              onChange={(e) =>\n                setSettings({ ...settings, numParents: e.target.value })\n              }\n            />\n          </label>\n          <label>\n            Max generations\n            <input\n              type='number'\n              value={settings.maxGenerations}\n              onChange={(e) =>\n                setSettings({ ...settings, maxGenerations: e.target.value })\n              }\n            />\n          </label>\n          <label>\n            Elitism\n            <input\n              type='checkbox'\n              checked={settings.elitism}\n              value={settings.elitism}\n              name='elitism'\n              onChange={(e) =>\n                setSettings({ ...settings, elitism: !settings.elitism })\n              }\n            />\n          </label>\n        </div>\n      </div>\n      <div className='row'>\n        <button onClick={() => runAlgorithm()}>Run algorithm</button>\n      </div>\n      <ul className='results' id='results'></ul>\n    </div>\n  );\n};\n\nexport default Main;\n","import './App.css';\nimport Main from './Components/Main';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Main />\n      <footer className='App-footer'>\n        <span>Szymon Galazka 2020</span>\n        <a\n          className='App-link'\n          href='https://github.com/SzymonGalazka/gen-alg-min'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          Repository link\n        </a>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}